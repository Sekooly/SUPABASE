-- Table: public.Administration

-- DROP TABLE public."Administration";

CREATE TABLE public."Administration"
(
    "Identifiant" text COLLATE pg_catalog."default" NOT NULL,
    "Code" text COLLATE pg_catalog."default",
    "Cycle" text COLLATE pg_catalog."default" NOT NULL DEFAULT 'Secondaire'::text,
    "Classe" text COLLATE pg_catalog."default",
    code_hash text COLLATE pg_catalog."default" DEFAULT 'nok'::text,
    "Derniere_consultation_notifs" text COLLATE pg_catalog."default" NOT NULL DEFAULT '30/12/1899 00:00:00'::text,
    "Droit_acces_anticipe_examen" text COLLATE pg_catalog."default" NOT NULL DEFAULT 'non'::text,
    "Droit_changer_ecolage" text COLLATE pg_catalog."default",
    "Droits_modifs" text COLLATE pg_catalog."default" NOT NULL DEFAULT 'non'::text,
    "Ecolage_OK" text COLLATE pg_catalog."default" DEFAULT 'oui'::text,
    "Role" text COLLATE pg_catalog."default" NOT NULL,
    "Telephone" text COLLATE pg_catalog."default",
    droit_hors_maintenance text COLLATE pg_catalog."default",
    type text COLLATE pg_catalog."default" DEFAULT 'Administration'::text,
    "position" character varying COLLATE pg_catalog."default",
    "Reponse_sondage" text COLLATE pg_catalog."default",
    "Nom" text COLLATE pg_catalog."default",
    "Prénom(s)" text COLLATE pg_catalog."default",
    "Mail" text COLLATE pg_catalog."default",
    "Genre" text COLLATE pg_catalog."default",
    "2è_Prénom" text COLLATE pg_catalog."default",
    "3è_Prénom" text COLLATE pg_catalog."default",
    "Numero_telephone" bigint,
    "Nom_complet" text COLLATE pg_catalog."default",
    "liste_notifs_lues" text COLLATE pg_catalog."default",
    CONSTRAINT "Administration_pkey" PRIMARY KEY ("Identifiant")
)

TABLESPACE pg_default;

ALTER TABLE public."Administration"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Administration" TO anon;

GRANT ALL ON TABLE public."Administration" TO authenticated;

GRANT ALL ON TABLE public."Administration" TO postgres;

GRANT ALL ON TABLE public."Administration" TO service_role;

GRANT ALL ON TABLE public."Administration" TO supabase_admin;





-- CREER L'ADMIN PAR DEFAUT
-- la classe et le cycle seront mis à jour dès l'initialisation du 1er inscrit
INSERT INTO public."Administration"(
    "Identifiant", "Code", "Cycle", "Classe", code_hash, "Derniere_consultation_notifs", "Droit_acces_anticipe_examen", "Droit_changer_ecolage", "Droits_modifs", "Ecolage_OK", "Role", "Telephone", droit_hors_maintenance, type, "position", "Reponse_sondage", "Nom", "Prénom(s)", "Mail", "Genre", "2è_Prénom", "3è_Prénom", "Numero_telephone", "Nom_complet", liste_notifs_lues)
    VALUES ('admin', '444bcb3a3fcf8389296c49467f27e1d6', 'Aucun', '(Tous|aucun)', 'ok', '', 'oui', 'oui', 'oui', 'oui', 'Sekooly', 'ok', 'oui', 'Administration', '', '', 'Admin', 'Sekooly', 'contact@sekooly.com', '', '', '', null, 'Admin Sekooly', '');








-- Table: public.Alerte

-- DROP TABLE public."Alerte";

CREATE TABLE public."Alerte"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Alerte" text COLLATE pg_catalog."default",
    CONSTRAINT "Alerte_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public."Alerte"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Alerte" TO anon;

GRANT ALL ON TABLE public."Alerte" TO authenticated;

GRANT ALL ON TABLE public."Alerte" TO postgres;

GRANT ALL ON TABLE public."Alerte" TO service_role;

GRANT ALL ON TABLE public."Alerte" TO supabase_admin;

INSERT INTO "Alerte" ("Alerte") VALUES ('');










-- Table: public.Classes

-- DROP TABLE public."Classes";

CREATE TABLE public."Classes"
(
    "Classe" text COLLATE pg_catalog."default" NOT NULL,
    cycle text COLLATE pg_catalog."default",
    "ID_URL" text COLLATE pg_catalog."default" NOT NULL,
    "URL" text COLLATE pg_catalog."default" DEFAULT 'https://drive.google.com/drive/folders/'::text,
    "URL_Mapping" text COLLATE pg_catalog."default",
    id_googlecalendar text COLLATE pg_catalog."default",
    id_fiche text COLLATE pg_catalog."default",
    nom_fiche text COLLATE pg_catalog."default",
    "Classe_bis" text COLLATE pg_catalog."default",
    id_formulaire_remediation text COLLATE pg_catalog."default",
    "nb_avis_donnés" text COLLATE pg_catalog."default",
    nb_avis_max text COLLATE pg_catalog."default",
    taux_conseil text COLLATE pg_catalog."default",
    "URL_agenda" text COLLATE pg_catalog."default",
    niveau text COLLATE pg_catalog."default",
    commun_au_cycle character varying COLLATE pg_catalog."default" DEFAULT 'non'::character varying,
    CONSTRAINT "Classes_pkey" PRIMARY KEY ("ID_URL")
)

TABLESPACE pg_default;

ALTER TABLE public."Classes"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Classes" TO anon;

GRANT ALL ON TABLE public."Classes" TO authenticated;

GRANT ALL ON TABLE public."Classes" TO postgres;

GRANT ALL ON TABLE public."Classes" TO service_role;

GRANT ALL ON TABLE public."Classes" TO supabase_admin;


















-- Table: public.Contact

-- DROP TABLE public."Contact";

CREATE TABLE public."Contact"
(
    "Contact" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Contact_pkey" PRIMARY KEY ("Contact")
)

TABLESPACE pg_default;

ALTER TABLE public."Contact"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Contact" TO anon;

GRANT ALL ON TABLE public."Contact" TO authenticated;

GRANT ALL ON TABLE public."Contact" TO postgres;

GRANT ALL ON TABLE public."Contact" TO service_role;

GRANT ALL ON TABLE public."Contact" TO supabase_admin;




















-- Table: public.Eleves

-- DROP TABLE public."Eleves";

CREATE TABLE public."Eleves"
(
    "Identifiant" text COLLATE pg_catalog."default" NOT NULL,
    "Code" text COLLATE pg_catalog."default",
    code_hash text COLLATE pg_catalog."default" DEFAULT 'nok'::text,
    "Classe" text COLLATE pg_catalog."default",
    "Cycle" text COLLATE pg_catalog."default",
    "Date_de_naissance" text COLLATE pg_catalog."default",
    "Derniere_consultation_notifs" text COLLATE pg_catalog."default" DEFAULT '30/12/1899 00:00:00'::text,
    "Droit_acces_anticipe_examen" text COLLATE pg_catalog."default" DEFAULT 'non'::text,
    "Ecolage_OK" text COLLATE pg_catalog."default",
    "Est_délégué" text COLLATE pg_catalog."default" DEFAULT 'non'::text,
    "Nom" text COLLATE pg_catalog."default",
    "Prénom(s)" text COLLATE pg_catalog."default",
    "1er_Prénom" text COLLATE pg_catalog."default",
    "LV1" text COLLATE pg_catalog."default",
    "LV2" text COLLATE pg_catalog."default",
    "LV3" text COLLATE pg_catalog."default",
    "Option_1" text COLLATE pg_catalog."default",
    "Option_2" text COLLATE pg_catalog."default",
    "Numero_telephone" text COLLATE pg_catalog."default",
    "Spécialité" text COLLATE pg_catalog."default",
    "Telephone" text COLLATE pg_catalog."default",
    droit_hors_maintenance text COLLATE pg_catalog."default",
    classe_bis text COLLATE pg_catalog."default",
    nombre_avis text COLLATE pg_catalog."default",
    type text COLLATE pg_catalog."default" DEFAULT 'Eleves'::text,
    "Reponse_sondage" text COLLATE pg_catalog."default",
    "Numeros_telephone_original" text COLLATE pg_catalog."default",
    "liste_notifs_lues" text COLLATE pg_catalog."default",
    CONSTRAINT "Eleves_pkey" PRIMARY KEY ("Identifiant")
)

TABLESPACE pg_default;

ALTER TABLE public."Eleves"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Eleves" TO anon;

GRANT ALL ON TABLE public."Eleves" TO authenticated;

GRANT ALL ON TABLE public."Eleves" TO postgres;

GRANT ALL ON TABLE public."Eleves" TO service_role;

GRANT ALL ON TABLE public."Eleves" TO supabase_admin;




















-- FUNCTION: public.maj_coef_rendu_bis()

-- DROP FUNCTION public.maj_coef_rendu_bis();

CREATE FUNCTION public.maj_coef_rendu_bis()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
BEGIN
            UPDATE "Rendus" as t_rendus
            SET coefficient_rendu = NEW.coefficient_rendu
            WHERE t_rendus.id_fichier_sujetdevoir = NEW.id_fichier;

            RETURN NEW;
        END;
$BODY$;

ALTER FUNCTION public.maj_coef_rendu_bis()
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu_bis() TO anon;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu_bis() TO postgres;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu_bis() TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu_bis() TO authenticated;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu_bis() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu_bis() TO service_role;




















































-- Table: public.Fichiers

-- DROP TABLE public."Fichiers";

CREATE TABLE public."Fichiers"
(
    id_fichier text COLLATE pg_catalog."default" NOT NULL,
    categorie_fichier text COLLATE pg_catalog."default",
    proprietaire text COLLATE pg_catalog."default",
    nom_fichier text COLLATE pg_catalog."default" NOT NULL,
    date_effet text COLLATE pg_catalog."default",
    heure_effet text COLLATE pg_catalog."default",
    id_dossier text COLLATE pg_catalog."default" NOT NULL,
    la_date_limite text COLLATE pg_catalog."default",
    lheure_limite text COLLATE pg_catalog."default",
    est_telechargeable text COLLATE pg_catalog."default" DEFAULT 'oui'::text,
    date_publication text COLLATE pg_catalog."default",
    coefficient_rendu real,
    taille_fichier bigint DEFAULT '0'::bigint,
    destinataire_par_page text COLLATE pg_catalog."default" DEFAULT 'null'::json,
    periode_bulletin text COLLATE pg_catalog."default",
    numeros_pages_pdf text COLLATE pg_catalog."default",
    id_chapitre text COLLATE pg_catalog."default" DEFAULT '--'::text,
    CONSTRAINT "Fichiers_pkey" PRIMARY KEY (id_fichier, id_dossier)
)

TABLESPACE pg_default;

ALTER TABLE public."Fichiers"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Fichiers" TO anon;

GRANT ALL ON TABLE public."Fichiers" TO authenticated;

GRANT ALL ON TABLE public."Fichiers" TO postgres;

GRANT ALL ON TABLE public."Fichiers" TO service_role;

GRANT ALL ON TABLE public."Fichiers" TO supabase_admin;

-- Trigger: trigger_coef_rendu_bis

-- DROP TRIGGER trigger_coef_rendu_bis ON public."Fichiers";

CREATE TRIGGER trigger_coef_rendu_bis
    AFTER UPDATE 
    ON public."Fichiers"
    FOR EACH ROW
    EXECUTE PROCEDURE public.maj_coef_rendu_bis();











-- Table: public.ID_RENDUS

-- DROP TABLE public."ID_RENDUS";

CREATE TABLE public."ID_RENDUS"
(
    "Cycle" text COLLATE pg_catalog."default" NOT NULL,
    dossier_rendus_cycle text COLLATE pg_catalog."default",
    id_dossier_cycle text COLLATE pg_catalog."default",
    CONSTRAINT "ID_RENDUS_pkey" PRIMARY KEY ("Cycle")
)

TABLESPACE pg_default;

ALTER TABLE public."ID_RENDUS"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."ID_RENDUS" TO anon;

GRANT ALL ON TABLE public."ID_RENDUS" TO authenticated;

GRANT ALL ON TABLE public."ID_RENDUS" TO postgres;

GRANT ALL ON TABLE public."ID_RENDUS" TO service_role;

GRANT ALL ON TABLE public."ID_RENDUS" TO supabase_admin;




















-- Table: public.Logs

-- DROP TABLE public."Logs";

CREATE TABLE public."Logs"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Horodateur" text COLLATE pg_catalog."default",
    "IP" text COLLATE pg_catalog."default",
    "Identifiant" text COLLATE pg_catalog."default",
    "Type" text COLLATE pg_catalog."default",
    "Statut" text COLLATE pg_catalog."default",
    "Ville" text COLLATE pg_catalog."default",
    "Pays" text COLLATE pg_catalog."default",
    "Latitude" text COLLATE pg_catalog."default",
    "Longitude" text COLLATE pg_catalog."default",
    "Operateur" text COLLATE pg_catalog."default",
    CONSTRAINT "Logs_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public."Logs"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Logs" TO anon;

GRANT ALL ON TABLE public."Logs" TO authenticated;

GRANT ALL ON TABLE public."Logs" TO postgres;

GRANT ALL ON TABLE public."Logs" TO service_role;

GRANT ALL ON TABLE public."Logs" TO supabase_admin;
















-- Table: public.Maintenance

-- DROP TABLE public."Maintenance";

CREATE TABLE public."Maintenance"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Maintenance" character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'non'::character varying,
    CONSTRAINT "Maintenance_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public."Maintenance"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Maintenance" TO anon;

GRANT ALL ON TABLE public."Maintenance" TO authenticated;

GRANT ALL ON TABLE public."Maintenance" TO postgres;

GRANT ALL ON TABLE public."Maintenance" TO service_role;

GRANT ALL ON TABLE public."Maintenance" TO supabase_admin;


INSERT INTO "Maintenance" ("Maintenance") VALUES ('non');
















-- Table: public.Matieres

-- DROP TABLE public."Matieres";

CREATE TABLE public."Matieres"
(
    "Classe_Matiere" text COLLATE pg_catalog."default" NOT NULL,
    "Classe" text COLLATE pg_catalog."default",
    "Couleur_matiere" text COLLATE pg_catalog."default" NOT NULL DEFAULT 'noir'::text,
    "Cycle" text COLLATE pg_catalog."default" NOT NULL,
    "ID_URL" text COLLATE pg_catalog."default",
    "Matiere" text COLLATE pg_catalog."default",
    "Matiere_bis" text COLLATE pg_catalog."default",
    "URL" text COLLATE pg_catalog."default",
    "URL_Mapping" text COLLATE pg_catalog."default",
    classe_id text COLLATE pg_catalog."default",
    commun_au_cycle character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'non'::character varying,
    coefficient_matiere real,
    CONSTRAINT "Matieres_pkey" PRIMARY KEY ("Classe_Matiere", "Cycle")
)

TABLESPACE pg_default;

ALTER TABLE public."Matieres"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Matieres" TO anon;

GRANT ALL ON TABLE public."Matieres" TO authenticated;

GRANT ALL ON TABLE public."Matieres" TO postgres;

GRANT ALL ON TABLE public."Matieres" TO service_role;

GRANT ALL ON TABLE public."Matieres" TO supabase_admin;




























-- Table: public.Notifs

-- DROP TABLE public."Notifs";

CREATE TABLE public."Notifs"
(
    id_notif text COLLATE pg_catalog."default" NOT NULL,
    "Classe" text COLLATE pg_catalog."default",
    "Classe_matiere" text COLLATE pg_catalog."default" NOT NULL,
    "Cycle" text COLLATE pg_catalog."default",
    "Date_derniere_modif" text COLLATE pg_catalog."default",
    "Horodateur" text COLLATE pg_catalog."default",
    "Id_classe_matiere" text COLLATE pg_catalog."default" NOT NULL,
    "Id_source" text COLLATE pg_catalog."default",
    "Identifiant_originaire" text COLLATE pg_catalog."default",
    "Identifiant_derniere_modif" text COLLATE pg_catalog."default",
    "Intitulé" text COLLATE pg_catalog."default",
    "Role_originaire" text COLLATE pg_catalog."default",
    "Role_derniere_modif" text COLLATE pg_catalog."default",
    "Type_notif" text COLLATE pg_catalog."default",
    CONSTRAINT "Notifs_pkey" PRIMARY KEY (id_notif, "Classe_matiere")
)

TABLESPACE pg_default;

ALTER TABLE public."Notifs"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Notifs" TO anon;

GRANT ALL ON TABLE public."Notifs" TO authenticated;

GRANT ALL ON TABLE public."Notifs" TO postgres;

GRANT ALL ON TABLE public."Notifs" TO service_role;

GRANT ALL ON TABLE public."Notifs" TO supabase_admin;






















-- Table: public.Profs

-- DROP TABLE public."Profs";

CREATE TABLE public."Profs"
(
    "Identifiant" text COLLATE pg_catalog."default" NOT NULL,
    "Code" text COLLATE pg_catalog."default",
    "Cycle" text COLLATE pg_catalog."default",
    "Classe" text COLLATE pg_catalog."default",
    "Classe_principale" text COLLATE pg_catalog."default",
    code_hash text COLLATE pg_catalog."default" DEFAULT 'nok'::text,
    "Nom_complet" text COLLATE pg_catalog."default",
    "Nom" text COLLATE pg_catalog."default",
    "Prénom(s)" text COLLATE pg_catalog."default",
    "2è_Prénom" text COLLATE pg_catalog."default",
    "3è_Prénom" text COLLATE pg_catalog."default",
    classe_bis text COLLATE pg_catalog."default",
    "Derniere_consultation_notifs" text COLLATE pg_catalog."default" DEFAULT '30/12/1899 00:00:00'::text,
    "Droit_acces_anticipe_examen" text COLLATE pg_catalog."default" DEFAULT 'oui'::text,
    "Droit_changer_ecolage" text COLLATE pg_catalog."default",
    "Ecolage_OK" text COLLATE pg_catalog."default" DEFAULT 'oui'::text,
    "Genre" character varying COLLATE pg_catalog."default",
    "Mail" character varying COLLATE pg_catalog."default",
    "Numero_telephone" text COLLATE pg_catalog."default",
    "Operateur_phone" text COLLATE pg_catalog."default",
    "Reponse_sondage" text COLLATE pg_catalog."default" DEFAULT 'non'::text,
    "Telephone" text COLLATE pg_catalog."default",
    droit_hors_maintenance text COLLATE pg_catalog."default" DEFAULT 'non'::text,
    type text COLLATE pg_catalog."default" DEFAULT 'Profs'::text,
    "liste_notifs_lues" text COLLATE pg_catalog."default",
    CONSTRAINT "Profs_pkey" PRIMARY KEY ("Identifiant")
)

TABLESPACE pg_default;

ALTER TABLE public."Profs"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Profs" TO anon;

GRANT ALL ON TABLE public."Profs" TO authenticated;

GRANT ALL ON TABLE public."Profs" TO postgres;

GRANT ALL ON TABLE public."Profs" TO service_role;

GRANT ALL ON TABLE public."Profs" TO supabase_admin;
























-- Table: public.Rendus

-- DROP TABLE public."Rendus";

CREATE TABLE public."Rendus"
(
    id_devoir text COLLATE pg_catalog."default" NOT NULL,
    date_publication text COLLATE pg_catalog."default",
    nom_fichier text COLLATE pg_catalog."default",
    proprietaire text COLLATE pg_catalog."default",
    id_dossier_sujetdevoir text COLLATE pg_catalog."default",
    matiere_rendue text COLLATE pg_catalog."default",
    id_fichier_sujetdevoir text COLLATE pg_catalog."default",
    id_fichier text COLLATE pg_catalog."default",
    remarque text COLLATE pg_catalog."default",
    coefficient_rendu real,
    taille_fichier bigint,
    note_rendu double precision,
    CONSTRAINT "Rendus_pkey" PRIMARY KEY (id_devoir)
)

TABLESPACE pg_default;

ALTER TABLE public."Rendus"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Rendus" TO anon;

GRANT ALL ON TABLE public."Rendus" TO authenticated;

GRANT ALL ON TABLE public."Rendus" TO postgres;

GRANT ALL ON TABLE public."Rendus" TO service_role;

GRANT ALL ON TABLE public."Rendus" TO supabase_admin;




























-- Table: public.Topic

-- DROP TABLE public."Topic";

CREATE TABLE public."Topic"
(
    "Id_topic" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Horodateur" text COLLATE pg_catalog."default",
    "Id_classe_matiere" text COLLATE pg_catalog."default",
    "Identifiant" text COLLATE pg_catalog."default",
    "Nombre_de_coms" bigint DEFAULT '0'::bigint,
    "Role" text COLLATE pg_catalog."default",
    "Titre" text COLLATE pg_catalog."default",
    "Votre_message" text COLLATE pg_catalog."default",
    CONSTRAINT "Topic_pkey" PRIMARY KEY ("Id_topic")
)

TABLESPACE pg_default;

ALTER TABLE public."Topic"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Topic" TO anon;

GRANT ALL ON TABLE public."Topic" TO authenticated;

GRANT ALL ON TABLE public."Topic" TO postgres;

GRANT ALL ON TABLE public."Topic" TO service_role;

GRANT ALL ON TABLE public."Topic" TO supabase_admin;


















-- Table: public.Coms

-- DROP TABLE public."Coms";

CREATE TABLE public."Coms"
(
    id_com integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Horodateur" text COLLATE pg_catalog."default",
    "Id_topic" bigint,
    "Votre_commentaire" text COLLATE pg_catalog."default",
    "Identifiant" text COLLATE pg_catalog."default",
    "Role" text COLLATE pg_catalog."default",
    CONSTRAINT "Coms_pkey" PRIMARY KEY (id_com),
    CONSTRAINT "Coms_Id_topic_fkey" FOREIGN KEY ("Id_topic")
        REFERENCES public."Topic" ("Id_topic") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public."Coms"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Coms" TO supabase_admin;

GRANT ALL ON TABLE public."Coms" TO authenticated;

GRANT ALL ON TABLE public."Coms" TO anon;

GRANT ALL ON TABLE public."Coms" TO postgres;

GRANT ALL ON TABLE public."Coms" TO service_role;


























-- Table: public.Visio

-- DROP TABLE public."Visio";

CREATE TABLE public."Visio"
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Horodateur" text COLLATE pg_catalog."default",
    "Identifiant" text COLLATE pg_catalog."default",
    "Type" text COLLATE pg_catalog."default",
    "Statut" text COLLATE pg_catalog."default",
    "IP" text COLLATE pg_catalog."default",
    "Ville" text COLLATE pg_catalog."default",
    "Pays" text COLLATE pg_catalog."default",
    "Latitude" text COLLATE pg_catalog."default",
    "Longitude" text COLLATE pg_catalog."default",
    "Operateur" text COLLATE pg_catalog."default",
    "Id_classe_matiere" text COLLATE pg_catalog."default",
    "Classe_matiere" text COLLATE pg_catalog."default",
    CONSTRAINT "Visio_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public."Visio"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Visio" TO anon;

GRANT ALL ON TABLE public."Visio" TO authenticated;

GRANT ALL ON TABLE public."Visio" TO postgres;

GRANT ALL ON TABLE public."Visio" TO service_role;

GRANT ALL ON TABLE public."Visio" TO supabase_admin;








































-- FUNCTION: public.maj_coef_rendu()

-- DROP FUNCTION public.maj_coef_rendu();

CREATE FUNCTION public.maj_coef_rendu()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
BEGIN
            UPDATE "Rendus" as t_rendus
            SET coefficient_rendu = (SELECT "Fichiers".coefficient_rendu as mon_resultat FROM "Fichiers" WHERE id_fichier = t_rendus.id_fichier_sujetdevoir)
            WHERE t_rendus.id_devoir = NEW.id_devoir;

            RETURN NEW;
        END;
$BODY$;

ALTER FUNCTION public.maj_coef_rendu()
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu() TO anon;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu() TO postgres;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu() TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu() TO authenticated;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.maj_coef_rendu() TO service_role;






































-- FUNCTION: public.initialiser()

-- DROP FUNCTION public.initialiser();

CREATE OR REPLACE FUNCTION public.initialiser(
    )
    RETURNS text
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
BEGIN
            UPDATE "Eleves"
            SET "Code" = "Date_de_naissance", "Derniere_consultation_notifs"  = '30/12/1899 00:00:00', code_hash = 'nok';


            UPDATE "Administration"
            SET "Code" = "Telephone", "Derniere_consultation_notifs"  = '30/12/1899 00:00:00', code_hash = 'nok';


            UPDATE "Profs"
            SET "Code" = "Telephone", "Derniere_consultation_notifs"  = '30/12/1899 00:00:00', code_hash = 'nok';
            RETURN 'OK';

        END;
$BODY$;

ALTER FUNCTION public.initialiser()
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.initialiser() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.initialiser() TO anon;

GRANT EXECUTE ON FUNCTION public.initialiser() TO authenticated;

GRANT EXECUTE ON FUNCTION public.initialiser() TO postgres;

GRANT EXECUTE ON FUNCTION public.initialiser() TO service_role;

GRANT EXECUTE ON FUNCTION public.initialiser() TO supabase_admin;





















-- FUNCTION: public.initialiser_admin(text)

-- DROP FUNCTION public.initialiser_admin(text);

CREATE OR REPLACE FUNCTION public.initialiser_admin(
    identifiant_admin text)
    RETURNS text
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
BEGIN
            UPDATE "Administration"
            SET "Code" = "Telephone", "Derniere_consultation_notifs"  = '30/12/1899 00:00:00', code_hash = 'nok', "type" = 'Administration'
            WHERE "Identifiant" = identifiant_admin;

            RETURN 'OK';
        END;
$BODY$;

ALTER FUNCTION public.initialiser_admin(text)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.initialiser_admin(text) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.initialiser_admin(text) TO anon;

GRANT EXECUTE ON FUNCTION public.initialiser_admin(text) TO authenticated;

GRANT EXECUTE ON FUNCTION public.initialiser_admin(text) TO postgres;

GRANT EXECUTE ON FUNCTION public.initialiser_admin(text) TO service_role;

GRANT EXECUTE ON FUNCTION public.initialiser_admin(text) TO supabase_admin;

























-- FUNCTION: public.initialiser_eleve(text)

-- DROP FUNCTION public.initialiser_eleve(text);

CREATE OR REPLACE FUNCTION public.initialiser_eleve(
    identifiant_eleve text)
    RETURNS text
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
BEGIN
            UPDATE "Eleves"
            SET "Code" = "Date_de_naissance", "Derniere_consultation_notifs"  = '30/12/1899 00:00:00', code_hash = 'nok', "type" = 'Eleves'
            WHERE "Identifiant" = identifiant_eleve;
            RETURN 'OK';
        END;
$BODY$;

ALTER FUNCTION public.initialiser_eleve(text)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.initialiser_eleve(text) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.initialiser_eleve(text) TO anon;

GRANT EXECUTE ON FUNCTION public.initialiser_eleve(text) TO authenticated;

GRANT EXECUTE ON FUNCTION public.initialiser_eleve(text) TO postgres;

GRANT EXECUTE ON FUNCTION public.initialiser_eleve(text) TO service_role;

GRANT EXECUTE ON FUNCTION public.initialiser_eleve(text) TO supabase_admin;



























-- FUNCTION: public.initialiser_prof(text)

-- DROP FUNCTION public.initialiser_prof(text);

CREATE OR REPLACE FUNCTION public.initialiser_prof(
    identifiant_prof text)
    RETURNS text
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
BEGIN
            UPDATE "Profs"
            SET "Code" = "Telephone", "Derniere_consultation_notifs"  = '30/12/1899 00:00:00', code_hash = 'nok', "type" = 'Profs'
            WHERE "Identifiant" = identifiant_prof;

            RETURN 'OK';
        END;
$BODY$;

ALTER FUNCTION public.initialiser_prof(text)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.initialiser_prof(text) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.initialiser_prof(text) TO anon;

GRANT EXECUTE ON FUNCTION public.initialiser_prof(text) TO authenticated;

GRANT EXECUTE ON FUNCTION public.initialiser_prof(text) TO postgres;

GRANT EXECUTE ON FUNCTION public.initialiser_prof(text) TO service_role;

GRANT EXECUTE ON FUNCTION public.initialiser_prof(text) TO supabase_admin;
























-- FUNCTION: public.maintenant()

-- DROP FUNCTION public.maintenant();

CREATE OR REPLACE FUNCTION public.maintenant(
    )
    RETURNS text
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
BEGIN
                RETURN NOW();
        END;
$BODY$;

ALTER FUNCTION public.maintenant()
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.maintenant() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.maintenant() TO anon;

GRANT EXECUTE ON FUNCTION public.maintenant() TO authenticated;

GRANT EXECUTE ON FUNCTION public.maintenant() TO postgres;

GRANT EXECUTE ON FUNCTION public.maintenant() TO service_role;

GRANT EXECUTE ON FUNCTION public.maintenant() TO supabase_admin;

COMMENT ON FUNCTION public.maintenant()
    IS 'Envoie la date de maintenant, peu importe la localisation géographique.';



























-- FUNCTION: public.nb_coms(bigint)

-- DROP FUNCTION public.nb_coms(bigint);

CREATE OR REPLACE FUNCTION public.nb_coms(
    valeur_id_topic bigint)
    RETURNS TABLE(nombre_coms bigint) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
    ROWS 1000

AS $BODY$
BEGIN
  return QUERY execute (
  'SELECT COUNT(id_com) as RESULTAT
  FROM "Coms"
  WHERE "Id_topic" = ' || valeur_id_topic || ';'
  );

END;
$BODY$;

ALTER FUNCTION public.nb_coms(bigint)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.nb_coms(bigint) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.nb_coms(bigint) TO anon;

GRANT EXECUTE ON FUNCTION public.nb_coms(bigint) TO authenticated;

GRANT EXECUTE ON FUNCTION public.nb_coms(bigint) TO postgres;

GRANT EXECUTE ON FUNCTION public.nb_coms(bigint) TO service_role;

GRANT EXECUTE ON FUNCTION public.nb_coms(bigint) TO supabase_admin;









































-- View: public.Cycles

-- DROP VIEW public."Cycles";

CREATE OR REPLACE VIEW public."Cycles"
 AS
 SELECT DISTINCT "ID_RENDUS"."Cycle" AS cycle,
    "ID_RENDUS".id_dossier_cycle,
    "ID_RENDUS".dossier_rendus_cycle
   FROM "ID_RENDUS"
     LEFT JOIN "Classes" ON "ID_RENDUS"."Cycle" = "Classes".cycle
  ORDER BY "ID_RENDUS"."Cycle";

ALTER TABLE public."Cycles"
    OWNER TO supabase_admin;

GRANT ALL ON TABLE public."Cycles" TO anon;
GRANT ALL ON TABLE public."Cycles" TO postgres;
GRANT ALL ON TABLE public."Cycles" TO supabase_admin;
GRANT ALL ON TABLE public."Cycles" TO authenticated;
GRANT ALL ON TABLE public."Cycles" TO service_role;



















-- View: public.Espace etablissement restant

-- DROP VIEW public."Espace etablissement restant";

CREATE OR REPLACE VIEW public."Espace etablissement restant"
 AS
 SELECT "Fichiers".nom_fichier AS "NOM_FICHIER",
    "Fichiers".proprietaire AS "PROPRIETAIRE",
    "Fichiers".categorie_fichier AS "CATEGORIE",
    COALESCE("Fichiers".taille_fichier, 0::bigint) AS octets_utilises,
    "Fichiers".id_fichier AS "ID_FICHIER",
    'Fichiers'::text AS "SOURCE",
    "Fichiers".date_publication AS "DATE"
   FROM "Fichiers"
UNION
 SELECT "Rendus".nom_fichier AS "NOM_FICHIER",
    "Rendus".proprietaire AS "PROPRIETAIRE",
    'Rendus'::text AS "CATEGORIE",
    COALESCE("Rendus".taille_fichier, 0::bigint) AS octets_utilises,
    "Rendus".id_fichier AS "ID_FICHIER",
    'Rendus'::text AS "SOURCE",
    "Rendus".date_publication AS "DATE"
   FROM "Rendus"
  ORDER BY 4 DESC;

ALTER TABLE public."Espace etablissement restant"
    OWNER TO supabase_admin;

GRANT ALL ON TABLE public."Espace etablissement restant" TO anon;
GRANT ALL ON TABLE public."Espace etablissement restant" TO postgres;
GRANT ALL ON TABLE public."Espace etablissement restant" TO supabase_admin;
GRANT ALL ON TABLE public."Espace etablissement restant" TO authenticated;
GRANT ALL ON TABLE public."Espace etablissement restant" TO service_role;






















-- View: public.bulletins_classe

-- DROP VIEW public.bulletins_classe;

CREATE OR REPLACE VIEW public.bulletins_classe
 AS
 SELECT "Eleves"."Identifiant",
    "Matieres".coefficient_matiere AS coef_matiere,
    "Rendus".matiere_rendue,
    split_part("Rendus".remarque, '%'::text, 1)::double precision AS note,
    "Rendus".coefficient_rendu::double precision AS coef_devoir
   FROM "Eleves",
    "Rendus",
    "Matieres"
  WHERE "Eleves"."Identifiant" = "Rendus".proprietaire AND "Rendus".id_dossier_sujetdevoir = "Matieres"."ID_URL"
  ORDER BY "Eleves"."Identifiant", "Matieres".coefficient_matiere DESC, "Rendus".matiere_rendue DESC, "Rendus".remarque DESC, "Rendus".coefficient_rendu DESC;

ALTER TABLE public.bulletins_classe
    OWNER TO supabase_admin;

GRANT ALL ON TABLE public.bulletins_classe TO anon;
GRANT ALL ON TABLE public.bulletins_classe TO postgres;
GRANT ALL ON TABLE public.bulletins_classe TO supabase_admin;
GRANT ALL ON TABLE public.bulletins_classe TO authenticated;
GRANT ALL ON TABLE public.bulletins_classe TO service_role;































CREATE OR REPLACE VIEW public."Trombinoscope"
 AS
SELECT * FROM "Eleves" left join "Fichiers" on "Eleves"."Identifiant" = "Fichiers".proprietaire
ORDER BY "Eleves"."Cycle", "Eleves"."Classe", "Eleves"."Identifiant";

















CREATE OR REPLACE VIEW public."Trombinoscope_profs"
AS
SELECT * FROM "Profs" left join (select * from "Fichiers" where categorie_fichier = 'Profil') as intermediaire on "Profs"."Identifiant" = intermediaire.proprietaire
ORDER BY "Profs"."Cycle", "Profs"."Classe", "Profs"."Identifiant";










CREATE OR REPLACE VIEW public."Trombinoscope_admin"
AS
SELECT * FROM "Administration" left join (select * from "Fichiers" where categorie_fichier = 'Profil') as intermediaire on "Administration"."Identifiant" = intermediaire.proprietaire
ORDER BY "Administration"."Cycle", "Administration"."Classe", "Administration"."Identifiant";



















-- Table: public.Conversations

-- DROP TABLE public."Conversations";

CREATE TABLE public."Conversations"
(
    "Horodateur" text COLLATE pg_catalog."default",
    "Expediteur" text COLLATE pg_catalog."default",
    "Destinataire" text COLLATE pg_catalog."default",
    "Message" text COLLATE pg_catalog."default",
    id_msg uuid NOT NULL DEFAULT uuid_generate_v4(),
    id_conv text COLLATE pg_catalog."default",
    CONSTRAINT "Conversations_pkey" PRIMARY KEY (id_msg)
)

TABLESPACE pg_default;

ALTER TABLE public."Conversations"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Conversations" TO anon;

GRANT ALL ON TABLE public."Conversations" TO authenticated;

GRANT ALL ON TABLE public."Conversations" TO postgres;

GRANT ALL ON TABLE public."Conversations" TO service_role;

GRANT ALL ON TABLE public."Conversations" TO supabase_admin;































-- Table: public.Programme

-- DROP TABLE public."Programme";

CREATE TABLE public."Programme"
(
    "ID_URL" text COLLATE pg_catalog."default" NOT NULL,
    "Classe_Matiere" text COLLATE pg_catalog."default",
    id_chapitre text COLLATE pg_catalog."default" NOT NULL,
    intitule_chapitre text COLLATE pg_catalog."default",
    position_chapitre bigint,
    etat text COLLATE pg_catalog."default",
    date_fin text COLLATE pg_catalog."default",
    CONSTRAINT "Programme_pkey" PRIMARY KEY (id_chapitre)
)

TABLESPACE pg_default;

ALTER TABLE public."Programme"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."Programme" TO anon;

GRANT ALL ON TABLE public."Programme" TO authenticated;

GRANT ALL ON TABLE public."Programme" TO postgres;

GRANT ALL ON TABLE public."Programme" TO service_role;

GRANT ALL ON TABLE public."Programme" TO supabase_admin;

COMMENT ON TABLE public."Programme"
    IS 'Contient le programme scolaire pour chaque matière';

COMMENT ON COLUMN public."Programme"."ID_URL"
    IS 'c''est l''ID URL de la MATIERE';

COMMENT ON COLUMN public."Programme"."Classe_Matiere"
    IS 'intitulé de la classe matière';







































alter publication supabase_realtime add table "Notifs";
alter publication supabase_realtime add table "Conversations" 



































































